-- Построить хранилище данных в архитектуре «снежинка».
-- - необходимо загрузить минимально необходимое количество таблиц для выполнения поставленных целей - используйте в ваших ETL минимум таблиц источника, достаточный для решения задачи

-- Ваше хранилище должно позволять решить две задачи (построить два отчёта):
-- - ежедневно строить витрину данных о поступлении денег от каждого клиента;
-- - ежемесячно создавать отчет о задолжниках (отрицательное значение счета) с указанием клиента и менеджера, который этот долг должен взыскивать. Также в отчете должны быть паспортные данные клиентов.

-- Что ожидается на выходе:
-- - схема "снежинка" с выделенными фактами и измерениями, а также список таблиц источника, которые должны попасть в ETL (source->staging->transform)
-- - SCD1 реализация загрузки данных в таблицы хранилища (со всеми промежуточными слоями)
-- - SCD2 реализация, если получится.

-- Обратите внимание, что вы можете разделить доставку данных от источника до DDS слоя и преобразование от DDS до CDM (например, доставить все нужные данные до DDS несколькими ETL поверх отдельных таблиц, затем построить некоторый обобщённый CDM из которого построить финальные витрины с требуемыми отчётами (оптимальность не требуется, но подумать о таких шагах полезно))

-- Используемая схема
-------------------------------------------------------------------------------------------------
-- payment_logs - фактовая таблица
-- phones -> payment_logs (phone_num <- phone_num) 
-- accounts <- phones (account_id <- account)
-- clients <- accounts (client_id <- client)
-- managers <- accounts (manager_id <- manager)
-- tech_passports -> clients (first_name -> first_name, last_name -> last_name, patronymic -> patronymic, sex -> sex, date_of_birth -> date_of_birth)
-------------------------------------------------------------------------------------------------

-- - SCD1 реализация загрузки данных в таблицы хранилища (со всеми промежуточными слоями)
-------------------------------------------------------------------------------------------------


