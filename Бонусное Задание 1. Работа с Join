-- 1. Выведите список покупателей (фамилия, имя) старше 50 лет, накупивших в магазине более
-- чем на 100000 долларов. (oe.customers, oe.orders)
-- 
select 
    cus.cust_last_name, 
    cus.cust_first_name
from 
    oe.customers cus
inner join
    oe.orders ord
    on cus.customer_id = ord.customer_id
where 
    add_months (cus.date_of_birth, 12*50) < to_date (sysdate)
group by
    cus.cust_last_name, cus.cust_first_name
having 
    sum(ord.order_total) > 100000
order by 
    cus.cust_last_name
--
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-- 
-- 2. Выведите список всех сотрудников (фамилия, имя) и сколько заказов он обработал.
-- (hr.employees, oe.orders)
--
select 
    emp.last_name,
    emp.first_name,
    count(ord.sales_rep_id) as order_count  
from 
    hr.employees emp
left join
    oe.orders ord
    on emp.employee_id = ord.sales_rep_id
group by 
    emp.last_name, emp.first_name
order by 
    order_count desc
-- 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--
-- 3. Выведите имена покупателей и количество заказов, которые он сделал. (oe.customers,
-- oe.orders)
-- 
select 
    cus.cust_first_name,
    count(ord.customer_id) as order_count  
    -- count(  
    --     case   
    --         when order_id is not null then ord.order_id 
    --         else null
    --     end   
    -- ) as order_count      
from 
    oe.customers cus
left join
    oe.orders ord
    on cus.customer_id = ord.customer_id
group by 
    cus.cust_first_name
order by 
    order_count desc
-- 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--
-- 4. Выведите имена всех покупателей и количество мониторов, которые они купили.
-- (oe.customers, oe.orders, oe.order_items, oe.product_information)
--
select 
    cus.cust_first_name, 
    count(  
        case   
            when inf.category_id = 11 then ord.order_id 
            else null
        end   
    ) as order_count  
from   
    oe.customers cus  
left join   
    oe.orders ord 
    on cus.customer_id = ord.customer_id 
left join 
    oe.order_items ite 
    on ord.order_id = ite.order_id 
left join 
    oe.product_information inf 
    on ite.product_id = inf.product_id 
group by 
    cus.cust_first_name
order by
    order_count desc
-- 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-- 
-- 5. Выведите все заказы и количество проданных CPU D400 в них. (oe.orders, oe.order_items,
-- oe.product_information)
-- 
select  
    ord.order_id,  
    sum(  
        case 
            when inf.product_name = 'CPU D400' then ite.quantity  
            else 0  
        end   
    ) as item_sum
from 
    oe.orders ord
left join
    oe.order_items ite  
    on ord.order_id = ite.order_id
left join
    oe.product_information inf  
    on inf.product_id = ite.product_id
group by 
    ord.order_id  
order by 
    item_sum desc  
-- 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-- 
-- 6. Выведите список (фамилия, имя сотрудника) и их начальников (фамилия, имя).
-- (hr.employees)
-- 
-- 1 вариант
select 
    emp1.last_name || ' ' || emp1.first_name as employee_, 
    emp2.last_name || ' ' || emp2.first_name as manager_
from  
    hr.employees emp1 
inner join  
    hr.employees emp2 
    on emp1.manager_id = emp2.employee_id
order by 
    emp1.last_name,
    emp1.first_name
-- 
-- 2 вариант с рекурсией
select 
    lpad(' ', 2*(level - 1)) || emp1.last_name || ' ' || emp1.first_name as employees_structure
from
    hr.employees emp1 -- employees
left join 
    hr.employees emp2 -- managers
    on emp1.manager_id = emp2.employee_id
start with
    emp1.manager_id is null 
connect by prior
    emp1.employee_id = emp2.employee_id
order siblings by 
    emp1.last_name, 
    emp1.first_name
-- 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--
-- 7. Напишите запрос, который покажет имя и фамилию сотрудников, которые получают
-- заработную плату больше своего менеджера. (hr.employees)
--
select 
    emp1.last_name || ' ' || emp1.first_name as employee_
from  
    hr.employees emp1 
inner join  
    hr.employees emp2 
    on emp1.manager_id = emp2.employee_id
where 
    emp1.salary > emp2.salary
order by 
    emp1.last_name,
    emp1.first_name
-- 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-- 
-- 8. Выведите список сотрудников отдела продаж, кто не совершил ни одной продажи в марте
-- 2007 года. (hr.employees, oe.orders)
--
select 
    emp.last_name || ' ' || emp.first_name as employee
from 
    hr.employees emp 
left join 
    oe.orders ord 
on  
    emp.employee_id = ord.sales_rep_id 
where 1=1  
    and emp.department_id = 80
group by 
    emp.last_name || ' ' || emp.first_name
having 
    count(  
        case   
            when ord.order_date between '01-MAR-07' and '31-MAR-07' then 1
            else null
        end   
    ) = 0
order by 
    employee
--
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-- 
-- 9*. Создайте отчет по суммарным месячным продажам фирмы за все 12 месяцев в 2007 году.
-- (oe.orders)
--
with 
    year_ as (
        select 1 as month_ from dual union all
        select 2 as month_ from dual union all
        select 3 as month_ from dual union all
        select 4 as month_ from dual union all
        select 5 as month_ from dual union all
        select 6 as month_ from dual union all
        select 7 as month_ from dual union all
        select 8 as month_ from dual union all
        select 9 as month_ from dual union all
        select 10 as month_ from dual union all
        select 11 as month_ from dual union all
        select 12 as month_ from dual
        ),
    sales_ as (
        select 
            extract(month from ord.order_date) as month_,
            sum (ord.order_total) as total_sales
        from
            oe.orders ord
        where
            ord.order_date between '01-JAN-07' and '31-DEC-07'
        group by 
            extract(month from ord.order_date)
        )
select 
    year_.month_,
    sales_.total_sales
from 
    year_
left join   
    sales_
    on year_.month_ = sales_.month_
order by 
    year_.month_
-- 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-- 
-- 10*. Добавьте к отчету фамилию продавшего на наибольшую сумму менеджера. (hr.employees)
-- 
with 
    -- вспомогательная таблица месяцев для заполнения отсутствующих
    year_ as (
        select 1 as month_ from dual union all
        select 2 as month_ from dual union all
        select 3 as month_ from dual union all
        select 4 as month_ from dual union all
        select 5 as month_ from dual union all
        select 6 as month_ from dual union all
        select 7 as month_ from dual union all
        select 8 as month_ from dual union all
        select 9 as month_ from dual union all
        select 10 as month_ from dual union all
        select 11 as month_ from dual union all
        select 12 as month_ from dual
        ),
    -- общие продажи по месяцам
    sales_ as (
        select 
            extract(month from ord.order_date) as month_,
            sum (ord.order_total) as total_sales
        from
            oe.orders ord
        where
            ord.order_date between '01-JAN-07' and '31-DEC-07'
        group by 
            extract(month from ord.order_date)
        ),
    -- продажи по месяцам по сотрудникам
    best_employees_ as (
        select 
            extract(month from ord.order_date) as month_,
            emp.last_name || ' ' || emp.first_name as employee,
            sum (ord.order_total) as total_sales
        from
            oe.orders ord
        inner join
            hr.employees emp
            on ord.sales_rep_id = emp.employee_id
        where 1=1
            and ord.order_date between '01-JAN-07' and '31-DEC-07'
        group by 
            extract(month from ord.order_date), emp.last_name || ' ' || emp.first_name
        )
select 
    year_.month_,
    sales_.total_sales,
    case 
        when best_.total_sales is not null then best_.employee || ' (' || best_.total_sales || ')'
        else null
    end as best_employee_with_sales_per_month
from 
    year_
left join   
    sales_
    on year_.month_ = sales_.month_
left join   
    best_employees_ best_
    on year_.month_ = best_.month_
where
    -- отбираем сотрудников с максимальными продажами в просматриваемом месяце
    best_.total_sales = (select 
                            max (total_sales)
                        from 
                            best_employees_  
                        where 
                            best_employees_.month_ = year_.month_
                        )
    -- сохраняем с null для сохранения месяцев, в которых нет продаж сотрудниками
    or best_.total_sales is null
order by 
    year_.month_
--
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
-- 
-- 11*. Дана таблица ученик – оценка. Выведите количество двоек у учеников, имеющих 10 и
-- более пятерок. За один проход по таблице.
--
select
    name,
    count (case when mark = 2 then 1 end) as count_5
from 
    de3at.kela_students
group by 
    name
having 
    count (case when mark = 5 then 1 else null end) > 10
order by 
    name
--
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
